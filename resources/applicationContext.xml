<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 配置数据库相关参数properties的属性 -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3066/db15436331?serverTimezone=UTC" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<context:annotation-config /> 
	<!-- 使@Autowired 等注解 可以使用 -->
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文 件 -->
	<!-- 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包,使用别名 -->
		<property name="typeAliasesPackage" value="cn.lk.newsssm.entity" />
		<!-- 自动扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>
	<!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器 中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="cn.lk.newsssm.dao" />
	</bean>

	<!-- 扫描service包所有注解 @Service -->
	<context:component-scan base-package="cn.lk.newsssm.service" />
	<!-- 配置事务管理器, 把事务管理交由spring来完成 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 扫描Controller层 -->
	<context:component-scan base-package="cn.lk.newsssm.web" />
	<!-- 开启RequestMapping 注解 -->
	<mvc:annotation-driven />
	<!-- 启用静态资源默认Servlet配置 (1)加入对静态资源的处理：js,css,jpg,gif,png等 (2)允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />
	<!-- 配置jsp视图解析器 -->
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <!--  <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" /> -->
        <property name="prefix" value="/WEB-INF/web/" />
        <property name="suffix" value=".jsp" />
    </bean>
</beans>